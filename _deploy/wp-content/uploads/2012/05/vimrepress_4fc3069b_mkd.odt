I've been using Todo.txt for at least a year, both from the commandline and the Android app.

It's great keeping a todo list in text files, synchronized across multiple devices via Dropbox, but there's one nagging thing in my system.  
That nagging issue is that Todo.txt doesn't nag me enough about the issues in my todo list!  So, I'm taking steps to resolve this by adding a function to my zshrc configuration.

I mapped out the basic command in the shell by combining todo's ls, grep (to keep only lines starting with numbers), and then a wordcount by line.

The following function was taken from [Wynnnetherland.com](http://wynnnetherland.com/journal/contextual-todo-list-counts-in-your-zsh-prompt) and modified since I installed todo.txt through Homebrew, and since I prefer a different command to count the items.


[cc_bash]
todo_count(){
  if $(which todo.sh &> /dev/null)
  then
    num=$(echo $(todo.sh ls | grep "^[0-9]" | wc -l))
    let todos=num
    if [ $todos != 0 ]
    then
      echo "$todos"
    else
      echo ""
    fi
  else
    echo ""
  fi
}
function zle-line-init zle-keymap-select {
RPS1="${${KEYMAP/vicmd/>>> ○[$(todo_count)]}/(main|viins)/± <<<[$(todo_count)]}"
    RPS2=$RPS1
    zle reset-prompt
}[/cc_bash]

The following is a diff of the difference showing the updated function [gist id=2817309]

Now my right hand prompt shows a nice count of incomplete todo items inside square brackets.