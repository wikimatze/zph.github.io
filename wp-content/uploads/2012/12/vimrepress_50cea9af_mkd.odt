I recently found myself working from a restaurant with open WIFI.  After having someone on open WIFI snatch my Facebook credentials back in 2009, I've become understandably paranoid about security on unsafe connections.

I spent a few minutes setting up a Squid Proxy on my VPS, when I came upon a better solution: set a SOCKS Proxy in OSX and create an SSH tunnel.

How it works
===
The SSH tunnel connects to the VPS using an encrypted channel.  This is open for use on a localport such as 8080 (or a randomly assigned one w/ script).
The SOCKS Proxy passes network requests to the localport instead of sending them to the web/email-server/etc.

How to do it
===
On OSX it consists of the two following steps:
[cc_bash]sudo networksetup -setsocksfirewallproxy Wi-Fi 127.0.0.1 $localport off[/cc_bash]
[cc_bash]ssh -f -p $remoteport -D $localport $remoteuser@$remoteproxy sleep 1d[/cc_bash]

This is all well and good, but someone went to the trouble of wrapping this in a script: [OSX-PROXY](https://github.com/12k/osx-proxy).

I took a little bit of time this weekend and refactored the code to extract functions, utilize a case statement, and add extra commandline arguments.

My revised script also toggles the state of the proxy if no arguments are given.

<script src="https://gist.github.com/6ea4520a60edb5175be9.js"></script>
